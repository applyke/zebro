#################
### DATABASE SETUP

# CREATE DATABASE
mysql -u root -p
CREATE DATABASE project_name_db CHARACTER SET utf8 COLLATE utf8_general_ci;
CREATE USER 'project_name_u'@'localhost' IDENTIFIED BY '';
GRANT ALL privileges ON name_db.* TO ' name_u'@'localhost';
# TO ALLOW REMOTE CONNECTION
GRANT ALL privileges ON name_db.* TO ' name_u'@'%' IDENTIFIED BY '';


#################
### OPTIMIZE AUTOLOADER
#################
# From root project dir
php composer.phar install --no-dev --optimize-autoloader

#################
### APACHE >= 2.4 SETUP
#################
<VirtualHost *:80>
    ServerName  project_name
    DocumentRoot "/vagrant/ project_name/public/"
    <Directory "/vagrant/ project_name/public/">
        AllowOverride All
        Require all granted
    </Directory>
</VirtualHost>

#################
### NGINX with PHP5-FPM SETUP
#################
server {
    server_name www. project_name.com;
    return 301 $scheme://project_name.com$request_uri;
}
server {
    charset utf-8;
    listen 80;
    server_name  project_name.com;

    gzip_types application/x-javascript text/css application/json;

    rewrite ^/(.*)/$ /$1 permanent;

    root /var/www/ project_name/public;

    error_log /var/log/nginx/ project_name.error.log;
    access_log /var/log/nginx/project_name.access.log;

    location / {
        index index.php;
        try_files $uri /index.php?$args;
    }

    location ~ [^/]\.php(/|$) {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }

        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
    }

    location ~*  \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 30d;
    }
}

Edit mime.types with adding:
text/cache.manifest       manifest;

#################
### DOCTRINE
#################

# RENAME /var/www/project_name/config/autoload/doctrine.local.php.rename TO doctrine.local.php AND CHANGE DB CONFIGURATION

# CLEAR METADATA CACHE
/var/www/project_name/vendor/bin/doctrine-module orm:clear-cache:metadata

# CHECK DB STRUCTURE UPDATES (WILL PRINT SQL ONLY)
./vendor/bin/doctrine-module orm:schema-tool:update --dump-sql

# UPDATE DB STRUCTURE
./vendor/bin/doctrine-module orm:schema-tool:update --force

# CLEAR RESULT CACHE
./vendor/bin/doctrine-module orm:clear-cache:result

# GENERATE PROXIES
./vendor/bin/doctrine-module orm:generate:proxies

# INSERT INITIAL VALUES INTO DB
mysql user_name -u project_name_u -p
source /var/www/project_name/sql/INSTALL.sql


#################
### GULP
### see gulp/INSTALL.txt
#################
